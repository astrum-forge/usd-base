name: docker publish
on:
  push:
    tags:
      - '*'
jobs:
  build-amd64:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: astrumforge/usd-base:${{ env.RELEASE_VERSION }}-amd64
          build-args: CMAKE_VERSION=${{ env.RELEASE_VERSION }}
  build-arm64:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: astrumforge/usd-base:${{ env.RELEASE_VERSION }}-arm64
          build-args: USD_VERSION=${{ env.RELEASE_VERSION }}
  build-manifest:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    needs: [build-amd64, build-arm64]
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: set version from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: print version number
        run: echo ${{ env.RELEASE_VERSION }}
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: create manifest
        run: docker manifest create astrumforge/usd-base:${{ env.RELEASE_VERSION }} astrumforge/usd-base:${{ env.RELEASE_VERSION }}-amd64 astrumforge/usd-base:${{ env.RELEASE_VERSION }}-arm64
      - name: upload manifest
        run: docker manifest push astrumforge/usd-base:${{ env.RELEASE_VERSION }}